apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kavita-config
  namespace: default
spec:
  storageClassName: syno-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kavita-books
  namespace: default
spec:
  storageClassName: syno-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kavita-ingress
  namespace: default
spec:
  ingressClassName: public
  tls:
    - secretName: orriborri-com-tls
  rules:
    - host: kavita.orriborri.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kavita
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: kavita
  namespace: default
spec:
  type: LoadBalancer
  selector:
    app: kavita
  ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kavita
  namespace: default
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kavita
  template:
    metadata:
      labels:
        app: kavita
    spec:
      containers:
        - name: kavita
          image: docker.io/jvmilazz0/kavita:0.8.7
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5000
          volumeMounts:
            - mountPath: /kavita/config
              name: kavita-config
            - mountPath: /books
              name: kavita-books
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: kavita-config
          persistentVolumeClaim:
            claimName: kavita-config
        - name: kavita-books
          persistentVolumeClaim:
            claimName: kavita-books
