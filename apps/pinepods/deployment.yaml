apiVersion: apps/v1
kind: Deployment
metadata:
  name: pinepods
  namespace: default
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: pinepods
  template:
    metadata:
      labels:
        app: pinepods
    spec:
      containers:
        - name: pinepods
          image: madeofpendletonwool/pinepods:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8040
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pinepods-secrets
                  key: admin-password
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-config
                  key: POSTGRES_PASSWORD
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-config
                  key: POSTGRES_USER
          envFrom:
            - configMapRef:
                name: pinepods-config
            - secretRef:
                name: pinepods-secrets
          volumeMounts:
            - name: downloads
              mountPath: /opt/pinepods/downloads
            - name: backups
              mountPath: /opt/pinepods/backups
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /
              port: 8040
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 8040
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: downloads
          persistentVolumeClaim:
            claimName: pinepods-downloads
        - name: backups
          persistentVolumeClaim:
            claimName: pinepods-backups
