apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: home-assistant
  namespace: default # Ensure it's the same namespace as your service
spec:
  ingressClassName: private
  tls:
    - secretName: orriborri-com-tls
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
  rules:
    - host: ha.orriborri.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: home-assistant
                port:
                  number: 80
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: default
spec:
  interval: 1h
  timeout: 5m
  chart:
    spec:
      chart: home-assistant
      version: "*"
      sourceRef:
        kind: HelmRepository
        name: home-assistant
        namespace: flux-system
  values:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi
    persistence:
      enabled: true
      accessMode: ReadWriteMany
      storageClass: homelab-nfs
    service:
      type: LoadBalancer
      port: 80
      targetPort: 8123
    # Add HACS initContainer
    initContainers:
      hacs-installer:
        image: busybox:latest
        command:
          - /bin/sh
          - -c
          - |
            # Create custom_components directory if it doesn't exist
            mkdir -p /config/custom_components
            
            # Download and install HACS if not already present
            if [ ! -d "/config/custom_components/hacs" ]; then
              echo "Installing HACS..."
              # Download HACS
              wget -O /tmp/hacs.zip https://github.com/hacs/integration/releases/latest/download/hacs.zip
              # Extract to custom_components
              cd /config/custom_components
              unzip /tmp/hacs.zip
              rm /tmp/hacs.zip
              echo "HACS installed successfully!"
            else
              echo "HACS already installed, skipping..."
            fi
        volumeMounts:
          - name: config
            mountPath: /config
        securityContext:
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
    configuration:
      enabled: true
      templateConfig: |-
        default_config:
        http:
          use_x_forwarded_for: true
          trusted_proxies:
            - 10.244.0.0/16
